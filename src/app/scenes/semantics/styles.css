.SemanticsBox {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  width: 100%;
  font-size: 12px;
}

.SemanticsBox.Error {
  background-color: darksalmon;
}

.SemanticsInput {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: flex-start;
  width: 100%;
}

.SemanticsText {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  padding: 8px;
  background-color: greenyellow;
}

.SemanticsText textarea {
  height: 64px;
  margin-bottom: 8px;
}

.CommandAndGraph svg {
  display: block;
  margin: auto;
  padding-top: 16px;
}

.CommandAndGraph svg rect.outerRect {
  stroke: none;
  fill: gray;
}

.CommandAndGraph svg rect:global.phrase {
  stroke: none;
  fill: white;
}

.CommandAndGraph svg rect:global.word {
  stroke: none;
  fill: aquamarine;
}

.CommandAndGraph svg text {
  fill: black;
  font-size: 14px;
}

.CommandAndGraph svg path {
  fill: none;
  stroke: black;
  stroke-width: 1px;
}

.CommandAndGraph svg marker#arrow path {
  fill: gray;
}

.CommandAndGraph pre {
  text-align: left;
  border: 1px lightgray solid;
}

.CommandAndGraph {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
}

.SemanticsTextButtons {
  color: inherit;
}

.SemanticsOutput {
  padding: 8px;
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.SemanticsOutput div {
  border: 1px gray solid;
  margin-right: 8px;
  padding: 2px 4px 2px 4px;
  border-radius: 4px;
  background-color: lightblue;
}

.command {
  border: 1px dotted gray;
  padding: 8px;
  border-radius: 4px;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}

.command > * {
  margin-right: 8px;
}

.actionSHOW {
  background-color: rgb(152, 248, 181);
  padding: 2px 6px 2px 6px;
  border: 1px solid green;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
}

.actionSHOW::after {
  content: "SHOW";
}

.actionDELETE {
  background-color: rgb(226, 81, 65);
  padding: 2px 6px 2px 6px;
  border: 1px solid maroon;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
}

.actionDELETE::after {
  content: "DELETE";
}

.commandObject {
  background-color: bisque;
  padding: 8px;
  border: 1px solid coral;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}

.commandObject > * {
  margin-right: 8px;
}

.entityName {
  background-color: aquamarine;
  padding: 2px 6px 2px 6px;
  border: 1px solid navy;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
}

.condition {
  background-color: darkgoldenrod;
  padding: 8px;
  border: 1px solid darkred;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}

.condition > * {
  margin-right: 8px;
}

.attr {
  background-color: rgb(152, 248, 181);
  padding: 2px 6px 2px 6px;
  border: 1px solid green;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
}

.opEQ {
  background-color: rgb(152, 248, 181);
  padding: 2px 6px 2px 6px;
  border: 1px solid green;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
}

.opEQ::after {
  content: "==";
}

.opHASROOT {
  background-color: rgb(152, 248, 181);
  padding: 2px 6px 2px 6px;
  border: 1px solid green;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
}

.opHASROOT::after {
  content: "HASROOT";
}

.value {
  background-color: rgb(152, 248, 181);
  padding: 2px 6px 2px 6px;
  border: 1px solid green;
  border-radius: 4px;
  box-shadow: 2px 2px rgba(0,0,0,0.2);
}
